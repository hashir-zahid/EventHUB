@model IEnumerable<EventHUB.Models.Entities.EventRegister>
@{
    Layout = null;
    // Group events by name and time
    var eventGroups = Model?
        .GroupBy(er => new { er.Register.EventName, er.Register.EventTime })
        .ToList();
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Financial Report Generator</title>
    <!-- Bootstrap 5 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #3498db;
            --secondary-color: #2980b9;
            --accent-color: #e74c3c;
            --light-color: #ecf0f1;
            --dark-color: #2c3e50;
            --success-color: #2ecc71;
            --warning-color: #f39c12;
            --sidebar-width: 250px;
            --header-height: 70px;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: #f5f7fa;
            color: #333;
            display: flex;
            min-height: 100vh;
        }

        /* Sidebar Styles */
        .sidebar {
            width: var(--sidebar-width);
            background-color: var(--dark-color);
            color: white;
            height: 100vh;
            position: fixed;
            transition: all 0.3s;
            z-index: 1000;
        }

        .sidebar-header {
            padding: 20px;
            background-color: rgba(0, 0, 0, 0.2);
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }

        .sidebar-menu {
            padding: 20px 0;
            height: calc(100vh - 60px);
            overflow-y: auto;
        }

            .sidebar-menu::-webkit-scrollbar {
                width: 5px;
            }

            .sidebar-menu::-webkit-scrollbar-track {
                background: rgba(0,0,0,0.1);
            }

            .sidebar-menu::-webkit-scrollbar-thumb {
                background: rgba(255,255,255,0.2);
                border-radius: 3px;
            }

                .sidebar-menu::-webkit-scrollbar-thumb:hover {
                    background: rgba(255,255,255,0.3);
                }

            .sidebar-menu h3 {
                color: rgba(255, 255, 255, 0.7);
                font-size: 12px;
                text-transform: uppercase;
                letter-spacing: 1px;
                padding: 0 20px 10px;
            }

            .sidebar-menu ul {
                list-style: none;
            }

            .sidebar-menu li a {
                display: block;
                padding: 12px 20px;
                color: rgba(255, 255, 255, 0.8);
                text-decoration: none;
                transition: all 0.3s;
                border-left: 3px solid transparent;
            }

                .sidebar-menu li a:hover,
                .sidebar-menu li a.active {
                    background-color: rgba(0, 0, 0, 0.2);
                    color: white;
                    border-left: 3px solid var(--primary-color);
                }

                .sidebar-menu li a i {
                    margin-right: 10px;
                    width: 20px;
                    text-align: center;
                }

        /* Main Content Styles */
        .main-content {
            flex: 1;
            margin-left: var(--sidebar-width);
            transition: all 0.3s;
        }

        /* Header Styles */
        .header {
            height: var(--header-height);
            background-color: white;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0 30px;
            position: sticky;
            top: 0;
            z-index: 100;
        }

        /* Stats Container */
        .stats-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            text-align: center;
            background-color: white;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

            .stat-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 8px 24px rgba(0, 0, 0, 0.08);
            }

            .stat-card h3 {
                color: #7f8c8d;
                font-size: 0.9rem;
                text-transform: uppercase;
                letter-spacing: 0.5px;
                margin-bottom: 1rem;
                font-weight: 500;
            }

            .stat-card .value {
                font-size: 2.25rem;
                font-weight: 700;
                color: var(--dark-color);
                line-height: 1.2;
                margin-bottom: 0.5rem;
            }

                .stat-card .value.revenue {
                    color: var(--success-color);
                }

                .stat-card .value.remaining {
                    color: var(--accent-color);
                }

        /* Table Styles */
        .report-table-container {
            background-color: white;
            border-radius: 12px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            margin-bottom: 2rem;
        }

        .report-table {
            width: 100%;
            border-collapse: collapse;
        }

            .report-table th {
                background-color: var(--primary-color);
                color: white;
                font-weight: 500;
                padding: 15px;
                text-align: left;
                font-size: 0.875rem;
                letter-spacing: 0.5px;
                text-transform: uppercase;
            }

            .report-table td {
                padding: 15px;
                border-bottom: 1px solid #eee;
                vertical-align: middle;
                font-size: 0.95rem;
            }

            .report-table tr:last-child td {
                border-bottom: none;
            }

            .report-table tr:hover {
                background-color: rgba(52, 152, 219, 0.05);
            }

        .event-name {
            font-weight: 600;
            color: var(--dark-color);
        }

        .ticket-price {
            color: var(--success-color);
            font-weight: 600;
        }

        .sold-tickets {
            color: var(--primary-color);
            font-weight: 600;
        }

        /* Card Styles */
        .card {
            padding-bottom: 10px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            background-color: white;
            margin-bottom: 20px;
            transition: box-shadow 0.3s ease;
            overflow: hidden;
        }

            .card:hover {
                box-shadow: 0 8px 24px rgba(0, 0, 0, 0.08);
            }

        .card-header {
            padding: 15px 20px;
            background-color: var(--light-color);
            border-bottom: 1px solid #ddd;
            font-weight: 600;
            font-size: 1.1rem;
            color: var(--dark-color);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .card-body {
            padding: 1.5rem;
        }

        .empty-state {
            text-align: center;
            padding: 4rem 2rem;
            color: #7f8c8d;
        }

            .empty-state i {
                font-size: 3.5rem;
                margin-bottom: 1.5rem;
                color: #bdc3c7;
            }

            .empty-state h3 {
                margin-bottom: 1rem;
                color: var(--dark-color);
                font-weight: 600;
            }

            .empty-state p {
                max-width: 500px;
                margin: 0 auto 1.5rem;
                color: #7f8c8d;
            }

        /* Button & Action Styles */
        .actions {
            display: flex;
            justify-content: flex-end;
            margin-top: 2rem;
            gap: 1rem;
        }

        .btn {
            margin-right: 10px;
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            border: none;
            cursor: pointer;
            font-weight: 500;
            transition: all 0.3s ease;
            font-size: 0.95rem;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }

        .btn-primary {
            background-color: var(--success-color);
            color: white;
        }

            .btn-primary:hover {
                background-color: var(--secondary-color);
                transform: translateY(-2px);
            }

        .btn-secondary {
            background-color: var(--light-color);
            color: var(--dark-color);
            border: 1px solid #ddd;
        }

            .btn-secondary:hover {
                background-color: #e0e0e0;
                transform: translateY(-2px);
            }

        .report-container {
            max-width: 1280px;
            margin: 0 auto;
            padding: 2rem;
        }

        .report-actions {
            display: flex;
            justify-content: flex-end;
            gap: 1rem;
            padding-top: 1.5rem;
            border-top: 1px solid #eee;
        }

        /* Responsive Adjustments */
        @@media (max-width: 992px) {
            .sidebar {
                width: 70px;
                overflow: hidden;
            }

                .sidebar:hover {
                    width: var(--sidebar-width);
                }

            .sidebar-header h2,
            .sidebar-menu h3,
            .sidebar-menu li a span {
                display: none;
            }

            .sidebar:hover .sidebar-header h2,
            .sidebar:hover .sidebar-menu h3,
            .sidebar:hover .sidebar-menu li a span {
                display: inline;
            }

            .sidebar-menu li a {
                text-align: center;
                padding: 12px 5px;
            }

                .sidebar-menu li a i {
                    margin-right: 0;
                    font-size: 20px;
                }

            .main-content {
                margin-left: 70px;
            }

            .sidebar:hover ~ .main-content {
                margin-left: var(--sidebar-width);
            }
        }

        @@media (max-width: 768px) {
            .report-actions, .actions {
                flex-direction: column;
            }

            .stats-container {
                grid-template-columns: 1fr;
                gap: 1rem;
            }

            .card-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 0.75rem;
            }

            .report-table {
                display: block;
                overflow-x: auto;
            }
        }

        @@media (max-width: 576px) {
            .header {
                padding: 0 15px;
            }

            .content {
                padding: 15px;
            }

            .btn {
                width: 100%;
            }
        }
    </style>
</head>
<body>
    <!-- Sidebar -->
    <div class="sidebar">
        <div class="sidebar-header">
            <h2 class="m-0">Admin</h2>
        </div>
        <div class="sidebar-menu">
            <h3>Main</h3>
            <ul class="nav flex-column">
                <li class="nav-item">
                    <a class="nav-link" asp-controller="Admin" asp-action="AdminDashboard"><i class="fas fa-home"></i> <span>Dashboard</span></a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" asp-controller="Admin" asp-action="AddEvent"><i class="fas fa-plus-circle"></i> <span>Add New Event</span></a>
                </li>
            </ul>

            <h3>Management</h3>
            <ul class="nav flex-column">
                <li class="nav-item">
                    <a class="nav-link" asp-controller="Admin" asp-action="EventList"><i class="fas fa-list-ul"></i> <span>Event List</span></a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" asp-controller="Admin" asp-action="MemberList"><i class="fas fa-users"></i> <span>Members</span></a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" asp-controller="Admin" asp-action="MediaLibrary"><i class="fas fa-photo-video"></i> <span>Media Library</span></a>
                </li>
                <li class="nav-item">
                    <a class="nav-link active" asp-controller="Admin" asp-action="Finance"><i class="fas fa-wallet"></i> <span>Finance</span></a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" asp-controller="Admin" asp-action="Meeting"><i class="fas fa-clipboard-list"></i> <span>Meetings</span></a>
                </li>
            </ul>

            <h3>User</h3>
            <ul class="nav flex-column">
                <li class="nav-item">
                    <a class="nav-link" asp-controller="Admin" asp-action="Feedback"><i class="fas fa-comments"></i> <span>Feedbacks</span></a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" asp-controller="Admin" asp-action="Message"><i class="fas fa-envelope"></i> <span>Member Messages</span></a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" asp-controller="Admin" asp-action="Notification"><i class="fas fa-envelope"></i> <span>Notification</span></a>
                </li>
            </ul>
            <ul class="nav flex-column">
                <li class="nav-item">
                    <a class="nav-link" asp-controller="Guest" asp-action="Logout"><i class="fas fa-sign-out-alt"></i> <span>Logout</span></a>
                </li>
            </ul>
        </div>
    </div>

    <!-- Main Content -->
    <div class="main-content">
        <!-- Header -->
        <div class="header">
            <h3>Financial Records</h3>
        </div>

        <!-- Content -->
        <div class="report-container">
            <!-- Calculate totals for all events stats -->
            @{
                var totalTickets = Model?.Count() ?? 0;
                var totalRevenue = Model?.Sum(er => er.Register.EventPrice) ?? 0;
                var uniqueEvents = Model?.Select(er => er.Register.EventName).Distinct().Count() ?? 0;
            }

            <div class="stats-container">
                <div class="stat-card">
                    <h3>Total Events</h3>
                    <div class="value">@uniqueEvents</div>
                </div>
                <div class="stat-card">
                    <h3>Total Registrations</h3>
                    <div class="value">@totalTickets</div>
                </div>
                <div class="stat-card">
                    <h3>Total Revenue</h3>
                    <div class="value revenue">Rs. @totalRevenue.ToString("N0")</div>
                </div>
            </div>

            <div class="card">
                <div class="card-header">
                    <h4 class="m-0">Financial Report - All Events</h4>
                </div>
                <div class="report-body">
                    @if (Model == null || !Model.Any())
                    {
                        <div class="empty-state">
                            <i class="fas fa-ticket-alt"></i>
                            <h3>No Events Found</h3>
                            <p>There are no events to display financial data for.</p>
                        </div>
                    }
                    else
                    {
                        <div class="table-responsive">
                            <table class="report-table">
                                <thead>
                                    <tr>
                                        <th>Event</th>
                                        <th>Date</th>
                                        <th>Venue</th>
                                        <th>Attendees</th>
                                        <th>Revenue</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var eventGroup in eventGroups)
                                    {
                                        var eventName = eventGroup.Key.EventName;
                                        var eventTime = eventGroup.Key.EventTime;
                                        var eventRegistrations = eventGroup.ToList();
                                        var ticketPrice = eventRegistrations.First().Register.EventPrice;
                                        var venue = eventRegistrations.First().Register.EventSpot;
                                        var attendees = eventRegistrations.Count();
                                        var revenue = eventRegistrations.Sum(er => er.Register.EventPrice);

                                        <tr>
                                            <td class="event-name">@eventName</td>
                                            <td>@eventTime</td>
                                            <td>@venue</td>
                                            <td class="sold-tickets">@attendees</td>
                                            <td class="ticket-price">Rs. @revenue.ToString("N0")</td>
                                        </tr>
                                    }
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <th colspan="3">Total</th>
                                        <th></th>
                                        <th>Rs. @totalRevenue.ToString("N0")</th>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    }
                    <div class="report-actions">
                        <button class="btn btn-primary" onclick="exportTableToCSV('financial_report.csv')">
                            <i class="fas fa-file-excel me-2"></i>Export to Excel
                        </button>
                        <button class="btn btn-primary" onclick="window.print()">
                            <i class="fas fa-print me-2"></i>Print Report
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap Bundle -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        function exportTableToCSV(filename) {
            const table = document.querySelector('.report-table');
            const rows = table.querySelectorAll('tr');
            let csv = [];

            rows.forEach(row => {
                const cols = row.querySelectorAll('th, td');
                const rowData = Array.from(cols).map(col => col.innerText.trim());
                csv.push(rowData.join(','));
            });

            const csvContent = csv.join('\n');
            const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });

            const link = document.createElement('a');
            const url = URL.createObjectURL(blob);

            link.setAttribute('href', url);
            link.setAttribute('download', filename);
            link.style.display = 'none';

            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }
    </script>
</body>
</html>